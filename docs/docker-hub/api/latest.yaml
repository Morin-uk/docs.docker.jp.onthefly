swagger: '2.0'
schemes:
  - https
host: hub.docker.com
basePath: "/"
produces:
  - application/json
consumes:
  - application/json
info:
  title: Docker HUB API
  version: 'ベータ'
  x-logo:
    url: https://matsuand.github.io/docs.docker.jp.onthefly/images/logo-docker-main.png
  description: |
    Docker Hub is a service provided by Docker for finding and sharing container images with your team.
    It is the world's largest library and community for container images.
    In addition to the [Docker Hub UI](https://docs.docker.com/docker-hub/) and [Docker Hub CLI tool](https://github.com/docker/hub-tool#readme) (currently experimental),
    Docker provides an API that allows you to interact with Docker Hub.
    Browse through the Docker Hub API documentation to explore the supported endpoints.
tags:
  # Primary objects
  - name: Authentication
    x-displayName: 認証
    description: |
      Docker Hub API のほとんどのエンドポイントでは、Docker 資格情報（credentials）を利用して認証されていることが必要になります。

      Additionally, similar to the Docker Hub UI features, API endpoint responses may vary depending on your plan (Free, Pro, or Team) and your account's permissions.
      To learn more about the features available in each plan and to upgrade your existing plan, see [Docker Pricing](https://www.docker.com/pricing).
  - name: Images
    x-displayName: 拡張イメージ管理
    description: |
      拡張イメージ管理（Advanced Image Management）の API エンドポイントを使うと、あらゆるリポジトリにわたっての Docker イメージ管理を行うことができます。
      詳しくは [拡張イメージ管理ダッシュボード](https://matsuand.github.io/docs.docker.jp.onthefly/docker-hub/image-management/) を参照してください。
definitions:
  UsersLoginRequest:
    description: ユーザーログイン情報の詳細
    type: object
    required: [username, password]
    properties:
      username:
        description: 認証済 Docker Hub アカウントのユーザー名。
        type: string
        example: myusername
      password:
        description: 認証済 Docker Hub アカウントのパスワード。
        type: string
        example: hunter2
  PostUsersLoginSuccessResponse:
    description: successful user login response
    type: object
    properties:
      token:
        description: |
          生成された認証トークン。
          このトークンは Docker Hub API での認証のために、HTTP 認証ヘッダー内において JWT として利用されます。
        type: string
        x-nullable: false
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
  PostUsersLoginErrorResponse:
    description: failed user login response.
    type: object
    properties:
      details:
        description: エラー内容。
        type: string
        x-nullable: false
        example: Incorrect authentication credentials
  ErrorInfo:
    description: 診断に利用されるエラーコンテキスト情報。
    type: object
    properties:
      api_call_docker_id:
        description: Docker ユーザーの ID。
        type: string
      api_call_name:
        description: 呼び出された API 処理名。
        type: string
      api_call_start:
        description: 呼び出しが開始された日付時刻。
        type: string
      api_call_txnid:
        description: 本呼び出しに固有の ID。
        type: string
  ErrorResponse:
    description: エラー。
    type: object
    properties:
      txnid:
        description: 本呼び出しに固有の ID。
        type: string
      message:
        description: エラーメッセージ。
        type: string
      errinfo:
        $ref: '#/definitions/ErrorInfo'
  GetNamespaceRepositoryImagesSummaryResponse:
    description: 1 つのリポジトリ内のイメージに対する概要情報。
    type: object
    properties:
      active_from:
        description: イメージがプッシュまたはプルされて以降、アクティブとしてカウントされるための経過時間。
        type: string
        example: '2021-01-25T14:25:37.076343059Z'
      statistics:
        type: object
        properties:
          total:
            description: このリポジトリ内にあるイメージ数。
            type: integer
            example: 3
          active:
            description: このリポジトリ内にてアクティブとしてカウントされたイメージ数。
            type: integer
            example: 2
          inactive:
            description: このリポジトリ内にて非アクティブとしてカウントされたイメージ数。
            type: integer
            example: 1
  GetNamespaceRepositoryImagesResponse:
    description: 1 つのリポジトリ内においてページ分けされたイメージ一覧。
    type: object
    properties:
      count:
        description: リポジトリ内のイメージ総数。
        type: integer
        example: 100
      next:
        description: 同一クエリーパラメーターによるイメージがまだ存在する場合の次ページへのリンク。
        type: string
        example: https://hub.docker.com/v2/namespaces/mynamespace/repositories/myrepo/images?&page=4&page_size=20
        x-nullable: true
      previous:
        description: 同一クエリーパラメーターによるイメージ一覧の 2 ページめ以降である場合の前ページへのリンク。
        type: string
        example: https://hub.docker.com/v2/namespaces/mynamespace/repositories/myrepo/images?&page=2&page_size=20
        x-nullable: true
      results:
        type: array
        description: イメージの詳細。
        items:
          type: object
          properties:
            namespace:
              description: リポジトリの名前空間。
              type: string
              example: mynamespace
            repository:
              description: リポジトリ名。
              type: string
              example: myrepo
            digest:
              description: イメージのダイジェスト値。
              type: string
              example: sha256:1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopqr
            tags:
              description: このイメージに対する現在と過去のタグ。
              type: array
              items:
                type: object
                properties:
                  tag:
                    description: タグ。
                    type: string
                    example: latest
                  is_current:
                    description: |
                      このタグがそのイメージを指し示している場合に`true`。

                      別イメージを指し示すようにオーバーライドされている場合は`false`。
                    type: boolean
                    example: true
            last_pushed:
              description: イメージが最後にプッシュされた時刻。
              type: string
              x-nullable: true
              example: '2021-02-24T22:05:27.526308Z'
            last_pulled:
              description: イメージが最後にプルされた時刻。これは少なくとも 1 時間ごとに更新されます。
              type: string
              x-nullable: true
              example: '2021-02-24T23:16:10.200008Z'
            status:
              description: "`active_from` にて定まる時間によらず、最後の操作に基づいて決まるイメージ状態。"
              type: string
              enum: [active, inactive]
              example: active
  PostNamespacesDeleteImagesRequest:
    description: Delete images request.
    type: object
    properties:
      dry_run:
        description: If `true` then will check and return errors and unignored warnings for the deletion request but will not delete any images.
        type: boolean
        example: false
      active_from:
        description: |
            Sets the time from which an image must have been pushed or pulled to be counted as active.

            Defaults to 1 month before the current time.
        type: string
        example: '2020-12-01T12:00:00Z'
      manifests:
        description: Image manifests to delete.
        type: array
        items:
          type: object
          required: [repository, digest]
          properties:
            repository:
              description: Name of the repository to delete the image from.
              type: string
              example: myrepo
            digest:
              description: Digest of the image to delete.
              type: string
              example: sha256:1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopqr
      ignore_warnings:
        description: |
          Warnings to ignore. If a warning is not ignored then no deletions will happen and the warning is returned in the response.

          These warnings include:

          * is_active: warning when attempting to delete an image that is marked as active.

          * current_tag: warning when attempting to delete an image that has one or more current tags in the repository.

          Warnings can be copied from the response to the request.
        type: array
        items:
          type: object
          required: [repository, digest, warning]
          properties:
            repository:
              description: Name of the repository of the image to ignore the warning for.
              type: string
              example: myrepo
            digest:
              description: Digest of the image to ignore the warning for.
              type: string
              example: sha256:1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopqr
            warning:
              description: Warning to ignore.
              type: string
              enum: [is_active, current_tag]
              example: current_tag
            tags:
              description: Current tags to ignore.
              type: array
              items:
                type: string
                example: latest
  PostNamespacesDeleteImagesResponseSuccess:
    description: Successful delete images response.
    type: object
    properties:
      dry_run:
        description: Whether the request was a dry run or not.
        type: boolean
        example: false
      metrics:
        type: object
        properties:
          manifest_deletes:
            description: Number of manifests deleted.
            type: integer
            example: 3
          manifest_errors:
            description: Number of manifests that failed to delete.
            type: integer
            example: 0
          tag_deletes:
            description: Number of tags deleted.
            type: integer
            example: 1
          tag_errors:
            description: Number of tags that failed to delete.
            type: integer
            example: 0
  PostNamespacesDeleteImagesResponseError:
    description: Deletion not possible.
    type: object
    properties:
      txnid:
        description: 本呼び出しの固有 ID。
        type: string
      message:
        description: エラーメッセージ。
        type: string
      errinfo:
        allOf:
          - $ref: '#/definitions/ErrorInfo'
          - type: object
            properties:
              type:
                description: Type of error.
                type: string
                example: validation
              details:
                type: object
                properties:
                  errors:
                    description: Errors from validating delete request. These cannot be ignored.
                    type: array
                    items:
                      type: object
                      properties:
                        repository:
                          description: Name of the repository of the image that caused the error.
                          type: string
                          example: myrepo
                        digest:
                          description: Digest of the image that caused the error.
                          type: string
                          example: sha256:1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopqr
                        error:
                          description: Error type.
                          type: string
                          enum: [not_found, unauthorized, child_manifest]
                          example: not_found
                  warnings:
                    description: |
                      Warnings that can be ignored.

                      These warnings include:

                      * is_active: warning when attempting to delete an image that is marked as active.

                      * current_tag: warning when attempting to delete an image that has one or more current tags in the repository.

                      Warnings can be copied from the response to the request.
                    type: array
                    items:
                      type: object
                      properties:
                        repository:
                          description: Name of the repository of the image that caused the warning.
                          type: string
                          example: myrepo
                        digest:
                          description: Digest of the image that caused the warning.
                          type: string
                          example: sha256:1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopqr
                        warning:
                          description: Warning type.
                          type: string
                          enum: [is_active, current_tag]
                          example: current_tag
                        tags:
                          description: Current tags if warning is `current_tag`.
                          type: array
                          items:
                            type: string
                            example: latest
paths:
  /v2/users/login:
    post:
      tags: [Authentication]
      summary: 認証トークンの生成
      operationId: PostUsersLogin
      description: |
        Docker Hub API の利用にあたっての認証を行うための認証トークンを生成します。

        返されるトークンは、`Authentication: JWT {TOKEN}`のように HTTP 認証ヘッダーにおいて利用されます。

        Docker Hub API のほとんどにおいて、このトークンは消費および詳細情報取得に利用されます。たとえばプライベートリポジトリ内のイメージ一覧を取得する際に利用されます。
      parameters:
        - name: body
          in: body
          description: ログイン情報の詳細
          required: true
          schema:
            $ref: '#/definitions/UsersLoginRequest'
      responses:
        200:
          description: Authentication successful
          schema:
            $ref: '#/definitions/PostUsersLoginSuccessResponse'
        401:
          description: Authentication failed
          schema:
            $ref: '#/definitions/PostUsersLoginErrorResponse'
  /v2/namespaces/{namespace}/repositories/{repository}/images-summary:
    get:
      tags: [Images]
      summary: リポジトリ内イメージの概要取得
      description: |
        1 つのリポジトリ内のイメージ数、およびアクティブ、非アクティブのイメージ数を取得します。
      operationId: GetNamespacesRepositoriesImagesSummary
      produces:
        - application/json
      parameters:
        - name: namespace
          in: path
          required: true
          description: リポジトリの名前空間。
          type: string
        - name: repository
          in: path
          required: true
          description: リポジトリ名。
          type: string
        - name: active_from
          in: query
          required: false
          description: |
            イメージをアクティブ状態としてカウントするのは、プッシュまたはプルされてからどれだけ経過したものであるのかを時間設定します。

            デフォルトは現在時刻から 1 ヵ月前。
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/GetNamespaceRepositoryImagesSummaryResponse'
        401:
          description: Unauthorized - user does not have read access to the namespace
          schema:
            $ref: '#/definitions/ErrorResponse'
  /v2/namespaces/{namespace}/repositories/{repository}/images:
    get:
      tags: [Images]
      summary: リポジトリイメージの詳細取得
      description: 1 つのリポジトリ内にあるイメージの詳細情報を取得します。
      operationId: GetNamespacesRepositoriesImages
      produces:
        - application/json
      parameters:
        - name: namespace
          in: path
          required: true
          description: リポジトリの名前空間。
          type: string
        - name: repository
          in: path
          required: true
          description: リポジトリ名。
          type: string
        - name: status
          in: query
          required: false
          description: ここで指定するイメージのみを検索するためのフィルター。
          type: string
          enum: [active, inactive]
        - name: ordering
          in: query
          required: false
          description: |
            このプロパティにより結果の並び替えを行います。

            先頭に`-`をつけると降順で並び替えを行います。
          type: string
          enum: [last_activity, -last_activity, digest, -digest]
        - name: active_from
          in: query
          required: false
          description: |
            イメージをアクティブ状態としてカウントするのは、プッシュまたはプルされてからどれだけ経過したものであるのかを時間設定します。

            デフォルトは現在時刻から 1 ヵ月前。
          type: string
        - name: page
          in: query
          required: false
          description: 取得するページ数。デフォルトは 1。
          type: integer
        - name: page_size
          in: query
          required: false
          description: 各ページごとに取得するイメージ数。デフォルトは 10。最大値は 100。
          type: integer
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/GetNamespaceRepositoryImagesResponse'
        401:
          description: Unauthorized - user does not have read access to the namespace
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: Forbidden - this API is only available to users on Pro or Team plans
          schema:
            $ref: '#/definitions/ErrorResponse'
  /v2/namespaces/{namespace}/delete-images:
    post:
      tags: [Images]
      summary: イメージの削除
      operationId: PostNamespacesDeleteImages
      description: |
        1 つの名前空間内にある 1 つまたは複数のイメージを削除します。現在のところこの機能は 1 つのリポジトリ内に限定されています。

        アクティブなイメージまたは現在カレントなタグとなっているイメージを削除しようとした場合、削除処理は行われず警告メッセージが出力されます。
        削除を継続して行いたい場合は、`ignore_warnings`プロパティに各種の値を設定すれば警告を無視して削除ができます。

        現在タグづけされているイメージを削除すると、このリポジトリからそのタグが削除されます。

        エラーを無視することはできません。マルチアーキテクチャーイメージの子イメージを直接削除することはできません。
      parameters:
        - name: namespace
          in: path
          required: true
          description: リポジトリの名前空間。
          type: string
        - description: 削除リクエスト。
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PostNamespacesDeleteImagesRequest'
      responses:
        200:
          description: Deletion completed
          schema:
            $ref: '#/definitions/PostNamespacesDeleteImagesResponseSuccess'
        400:
          description: Deletion not possible
          schema:
            $ref: '#/definitions/PostNamespacesDeleteImagesResponseError'
        403:
          description: Forbidden - this API is only available to users on Pro or Team plans
          schema:
            $ref: '#/definitions/ErrorResponse'
