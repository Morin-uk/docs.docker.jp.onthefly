%This is the change file for the original Docker's Documentation file.
%This is part of Japanese translation version for Docker's Documantation.

@x
swagger: '2.0'
schemes:
@y
swagger: '2.0'
schemes:
@z

@x
  - https
host: hub.docker.com
basePath: "/"
produces:
@y
  - https
host: hub.docker.com
basePath: "/"
produces:
@z

@x
  - application/json
consumes:
@y
  - application/json
consumes:
@z

@x
  - application/json
info:
  title: Docker HUB API
  version: 'beta'
@y
  - application/json
info:
  title: Docker HUB API
  version: 'beta'
@z

@x
  x-logo:
@y
  x-logo:
@z

@x
    url: https://docs.docker.com/images/logo-docker-main.png
@y
    url: https://docs.docker.com/images/logo-docker-main.png
@z

@x
  description: |
    Docker Hub is a service provided by Docker for finding and sharing container images with your team.
    It is the world's largest library and community for container images.
@y
  description: |
    Docker Hub is a service provided by Docker for finding and sharing container images with your team.
    It is the world's largest library and community for container images.
@z

@x
    In addition to the [Docker Hub UI](https://docs.docker.com/docker-hub/) and [Docker Hub CLI tool](https://github.com/docker/hub-tool#readme) (currently experimental),
    Docker provides an API that allows you to interact with Docker Hub.
    Browse through the Docker Hub API documentation to explore the supported endpoints.
tags:
  # Primary objects
@y
    In addition to the [Docker Hub UI](https://docs.docker.com/docker-hub/) and [Docker Hub CLI tool](https://github.com/docker/hub-tool#readme) (currently experimental),
    Docker provides an API that allows you to interact with Docker Hub.
    Browse through the Docker Hub API documentation to explore the supported endpoints.
tags:
  # Primary objects
@z

@x
  - name: Authentication
@y
  - name: Authentication
@z

@x
    x-displayName: Authentication
@y
    x-displayName: Authentication
@z

@x
    description: |
      Most Docker Hub API endpoints require you to authenticate using your Docker credentials.
@y
    description: |
      Most Docker Hub API endpoints require you to authenticate using your Docker credentials.
@z

@x
      Additionally, similar to the Docker Hub UI features, API endpoint responses may vary depending on your plan (Free, Pro, or Team) and your account's permissions.
      To learn more about the features available in each plan and to upgrade your existing plan, see [Docker Pricing](https://www.docker.com/pricing).
@y
      Additionally, similar to the Docker Hub UI features, API endpoint responses may vary depending on your plan (Free, Pro, or Team) and your account's permissions.
      To learn more about the features available in each plan and to upgrade your existing plan, see [Docker Pricing](https://www.docker.com/pricing).
@z

@x
  - name: Images
@y
  - name: Images
@z

@x
    x-displayName: Advanced image management
@y
    x-displayName: Advanced image management
@z

@x
    description: |
      The Advanced Image Management API endpoints allow you to manage Docker images across all repositories.
@y
    description: |
      The Advanced Image Management API endpoints allow you to manage Docker images across all repositories.
@z

@x
      For more information, see [Advanced Image Management dashboard](https://docs.docker.com/docker-hub/image-management/).
definitions:
  UsersLoginRequest:
    description: User login details
    type: object
    required: [username, password]
    properties:
      username: 
        description: The username of the Docker Hub account to authenticate with.
        type: string
        example: myusername
      password:
        description: The password of the Docker Hub account to authenticate with.
        type: string
        example: hunter2
  PostUsersLoginSuccessResponse:
    description: successful user login response
    type: object
    properties:
      token:
@y
      For more information, see [Advanced Image Management dashboard](https://docs.docker.com/docker-hub/image-management/).
definitions:
  UsersLoginRequest:
    description: User login details
    type: object
    required: [username, password]
    properties:
      username: 
        description: The username of the Docker Hub account to authenticate with.
        type: string
        example: myusername
      password:
        description: The password of the Docker Hub account to authenticate with.
        type: string
        example: hunter2
  PostUsersLoginSuccessResponse:
    description: successful user login response
    type: object
    properties:
      token:
@z

@x
        description: |
          Created authentication token.
          This token can be used in the HTTP Authentication header as a JWT to authenticate with the Docker Hub APIs.
        type: string
@y
        description: |
          Created authentication token.
          This token can be used in the HTTP Authentication header as a JWT to authenticate with the Docker Hub APIs.
        type: string
@z

@x
        x-nullable: false
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
  PostUsersLoginErrorResponse:
    description: failed user login response.
    type: object
    properties:
      details:
        description: Description of the error.
        type: string
@y
        x-nullable: false
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
  PostUsersLoginErrorResponse:
    description: failed user login response.
    type: object
    properties:
      details:
        description: Description of the error.
        type: string
@z

@x
        x-nullable: false
        example: Incorrect authentication credentials
  ErrorInfo:
    description: Context information for an error used for diagnostics.
    type: object
    properties:
      api_call_docker_id:
        description: ID of docker user.
        type: string
      api_call_name:
        description: Name of the API operation called.
        type: string
      api_call_start:
        description: Date/time of call start.
        type: string
      api_call_txnid:
        description: Unique ID for this call.
        type: string
  ErrorResponse:
    description: Represents an error.
    type: object
    properties:
      txnid:
        description: Unique ID for this call.
        type: string
      message:
        description: The error message.
        type: string
      errinfo:
        $ref: '#/definitions/ErrorInfo'
  GetNamespaceRepositoryImagesSummaryResponse:
    description: Summary information for images in a repository.
    type: object
    properties:
      active_from:
        description: Time from which an image must have been pushed or pulled to be counted as active.
        type: string
@y
        x-nullable: false
        example: Incorrect authentication credentials
  ErrorInfo:
    description: Context information for an error used for diagnostics.
    type: object
    properties:
      api_call_docker_id:
        description: ID of docker user.
        type: string
      api_call_name:
        description: Name of the API operation called.
        type: string
      api_call_start:
        description: Date/time of call start.
        type: string
      api_call_txnid:
        description: Unique ID for this call.
        type: string
  ErrorResponse:
    description: Represents an error.
    type: object
    properties:
      txnid:
        description: Unique ID for this call.
        type: string
      message:
        description: The error message.
        type: string
      errinfo:
        $ref: '#/definitions/ErrorInfo'
  GetNamespaceRepositoryImagesSummaryResponse:
    description: Summary information for images in a repository.
    type: object
    properties:
      active_from:
        description: Time from which an image must have been pushed or pulled to be counted as active.
        type: string
@z

@x
        example: '2021-01-25T14:25:37.076343059Z'
      statistics:
        type: object
        properties:
          total:
            description: Number of images in this repository.
            type: integer
            example: 3
          active:
            description: Number of images counted as active in this repository.
            type: integer
            example: 2
          inactive:
            description: Number of images counted as inactive in this repository.
            type: integer
            example: 1
  GetNamespaceRepositoryImagesResponse:
    description: Paginated list of images in a repository.
    type: object
    properties:
      count:
        description: Total count of images in the repository.
        type: integer
        example: 100
      next:
        description: Link to the next page with the same query parameters if there are more images.
        type: string
        example: https://hub.docker.com/v2/namespaces/mynamespace/repositories/myrepo/images?&page=4&page_size=20
@y
        example: '2021-01-25T14:25:37.076343059Z'
      statistics:
        type: object
        properties:
          total:
            description: Number of images in this repository.
            type: integer
            example: 3
          active:
            description: Number of images counted as active in this repository.
            type: integer
            example: 2
          inactive:
            description: Number of images counted as inactive in this repository.
            type: integer
            example: 1
  GetNamespaceRepositoryImagesResponse:
    description: Paginated list of images in a repository.
    type: object
    properties:
      count:
        description: Total count of images in the repository.
        type: integer
        example: 100
      next:
        description: Link to the next page with the same query parameters if there are more images.
        type: string
        example: https://hub.docker.com/v2/namespaces/mynamespace/repositories/myrepo/images?&page=4&page_size=20
@z

@x
        x-nullable: true
      previous:
        description: Link to the previous page with the same query parameters if not on first page.
        type: string
        example: https://hub.docker.com/v2/namespaces/mynamespace/repositories/myrepo/images?&page=2&page_size=20
@y
        x-nullable: true
      previous:
        description: Link to the previous page with the same query parameters if not on first page.
        type: string
        example: https://hub.docker.com/v2/namespaces/mynamespace/repositories/myrepo/images?&page=2&page_size=20
@z

@x
        x-nullable: true
      results:
        type: array
        description: Image details.
        items:
          type: object
          properties:
            namespace:
              description: The repository namespace.
              type: string
              example: mynamespace
            repository:
              description: The repository name.
              type: string
              example: myrepo
            digest:
              description: The image's digest.
              type: string
              example: sha256:1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopqr
            tags:
              description: The current and historical tags for this image.
              type: array
              items:
                type: object
                properties:
                  tag:
                    description: The tag.
                    type: string
                    example: latest
                  is_current:
@y
        x-nullable: true
      results:
        type: array
        description: Image details.
        items:
          type: object
          properties:
            namespace:
              description: The repository namespace.
              type: string
              example: mynamespace
            repository:
              description: The repository name.
              type: string
              example: myrepo
            digest:
              description: The image's digest.
              type: string
              example: sha256:1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopqr
            tags:
              description: The current and historical tags for this image.
              type: array
              items:
                type: object
                properties:
                  tag:
                    description: The tag.
                    type: string
                    example: latest
                  is_current:
@z

@x
                    description: |
                      `true` if the tag currently points to this image.
@y
                    description: |
                      `true` if the tag currently points to this image.
@z

@x
                      `false` if it has been overwritten to point at a different image.
                    type: boolean
                    example: true
            last_pushed:
              description: Time when this image was last pushed.
              type: string
@y
                      `false` if it has been overwritten to point at a different image.
                    type: boolean
                    example: true
            last_pushed:
              description: Time when this image was last pushed.
              type: string
@z

@x
              x-nullable: true
@y
              x-nullable: true
@z

@x
              example: '2021-02-24T22:05:27.526308Z'
            last_pulled:
              description: Time when this image was last pulled. Note this is updated at most once per hour.
              type: string
@y
              example: '2021-02-24T22:05:27.526308Z'
            last_pulled:
              description: Time when this image was last pulled. Note this is updated at most once per hour.
              type: string
@z

@x
              x-nullable: true
@y
              x-nullable: true
@z

@x
              example: '2021-02-24T23:16:10.200008Z'
            status:
              description: The status of the image based on its last activity against the `active_from` time.
              type: string
              enum: [active, inactive]
              example: active
  PostNamespacesDeleteImagesRequest:
    description: Delete images request.
    type: object
    properties:
      dry_run: 
        description: If `true` then will check and return errors and unignored warnings for the deletion request but will not delete any images.
        type: boolean
        example: false
      active_from:
        description: | 
            Sets the time from which an image must have been pushed or pulled to be counted as active.
@y
              example: '2021-02-24T23:16:10.200008Z'
            status:
              description: The status of the image based on its last activity against the `active_from` time.
              type: string
              enum: [active, inactive]
              example: active
  PostNamespacesDeleteImagesRequest:
    description: Delete images request.
    type: object
    properties:
      dry_run: 
        description: If `true` then will check and return errors and unignored warnings for the deletion request but will not delete any images.
        type: boolean
        example: false
      active_from:
        description: | 
            Sets the time from which an image must have been pushed or pulled to be counted as active.
@z

@x
            Defaults to 1 month before the current time.
        type: string
@y
            Defaults to 1 month before the current time.
        type: string
@z

@x
        example: '2020-12-01T12:00:00Z'
      manifests:
        description: Image manifests to delete.
        type: array
        items:
          type: object
          required: [repository, digest]
          properties:
            repository:
              description: Name of the repository to delete the image from.
              type: string
              example: myrepo
            digest:
              description: Digest of the image to delete.
              type: string
              example: sha256:1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopqr
      ignore_warnings:
@y
        example: '2020-12-01T12:00:00Z'
      manifests:
        description: Image manifests to delete.
        type: array
        items:
          type: object
          required: [repository, digest]
          properties:
            repository:
              description: Name of the repository to delete the image from.
              type: string
              example: myrepo
            digest:
              description: Digest of the image to delete.
              type: string
              example: sha256:1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopqr
      ignore_warnings:
@z

@x
        description: |
          Warnings to ignore. If a warning is not ignored then no deletions will happen and the warning is returned in the response.
@y
        description: |
          Warnings to ignore. If a warning is not ignored then no deletions will happen and the warning is returned in the response.
@z

@x
          These warnings include:
@y
          These warnings include:
@z

@x
          * is_active: warning when attempting to delete an image that is marked as active.
@y
          * is_active: warning when attempting to delete an image that is marked as active.
@z

@x
          * current_tag: warning when attempting to delete an image that has one or more current tags in the repository.
@y
          * current_tag: warning when attempting to delete an image that has one or more current tags in the repository.
@z

@x
          Warnings can be copied from the response to the request.
        type: array
        items:
          type: object
          required: [repository, digest, warning]
          properties:
            repository:
              description: Name of the repository of the image to ignore the warning for.
              type: string
              example: myrepo
            digest:
              description: Digest of the image to ignore the warning for.
              type: string
              example: sha256:1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopqr
            warning:
              description: Warning to ignore.
              type: string
              enum: [is_active, current_tag]
              example: current_tag
            tags:
              description: Current tags to ignore.
              type: array
              items:
                type: string
                example: latest
  PostNamespacesDeleteImagesResponseSuccess:
    description: Successful delete images response.
    type: object
    properties:
      dry_run:
        description: Whether the request was a dry run or not.
        type: boolean
        example: false
      metrics:
        type: object
        properties:
          manifest_deletes:
            description: Number of manifests deleted.
            type: integer
            example: 3
          manifest_errors:
            description: Number of manifests that failed to delete.
            type: integer
            example: 0
          tag_deletes:
            description: Number of tags deleted.
            type: integer
            example: 1
          tag_errors:
            description: Number of tags that failed to delete.
            type: integer
            example: 0
  PostNamespacesDeleteImagesResponseError:
    description: Deletion not possible.
    type: object
    properties:
      txnid:
        description: Unique ID for this call.
        type: string
      message:
        description: The error message.
        type: string
      errinfo:
        allOf:
@y
          Warnings can be copied from the response to the request.
        type: array
        items:
          type: object
          required: [repository, digest, warning]
          properties:
            repository:
              description: Name of the repository of the image to ignore the warning for.
              type: string
              example: myrepo
            digest:
              description: Digest of the image to ignore the warning for.
              type: string
              example: sha256:1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopqr
            warning:
              description: Warning to ignore.
              type: string
              enum: [is_active, current_tag]
              example: current_tag
            tags:
              description: Current tags to ignore.
              type: array
              items:
                type: string
                example: latest
  PostNamespacesDeleteImagesResponseSuccess:
    description: Successful delete images response.
    type: object
    properties:
      dry_run:
        description: Whether the request was a dry run or not.
        type: boolean
        example: false
      metrics:
        type: object
        properties:
          manifest_deletes:
            description: Number of manifests deleted.
            type: integer
            example: 3
          manifest_errors:
            description: Number of manifests that failed to delete.
            type: integer
            example: 0
          tag_deletes:
            description: Number of tags deleted.
            type: integer
            example: 1
          tag_errors:
            description: Number of tags that failed to delete.
            type: integer
            example: 0
  PostNamespacesDeleteImagesResponseError:
    description: Deletion not possible.
    type: object
    properties:
      txnid:
        description: Unique ID for this call.
        type: string
      message:
        description: The error message.
        type: string
      errinfo:
        allOf:
@z

@x
          - $ref: '#/definitions/ErrorInfo'
@y
          - $ref: '#/definitions/ErrorInfo'
@z

@x
          - type: object
            properties:
              type:
                description: Type of error.
                type: string
                example: validation
              details:
                type: object
                properties:
                  errors:
                    description: Errors from validating delete request. These cannot be ignored.
                    type: array
                    items:
                      type: object
                      properties:
                        repository:
                          description: Name of the repository of the image that caused the error.
                          type: string
                          example: myrepo
                        digest: 
                          description: Digest of the image that caused the error.
                          type: string
                          example: sha256:1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopqr
                        error:
                          description: Error type.
                          type: string
                          enum: [not_found, unauthorized, child_manifest]
                          example: not_found
                  warnings:
@y
          - type: object
            properties:
              type:
                description: Type of error.
                type: string
                example: validation
              details:
                type: object
                properties:
                  errors:
                    description: Errors from validating delete request. These cannot be ignored.
                    type: array
                    items:
                      type: object
                      properties:
                        repository:
                          description: Name of the repository of the image that caused the error.
                          type: string
                          example: myrepo
                        digest: 
                          description: Digest of the image that caused the error.
                          type: string
                          example: sha256:1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopqr
                        error:
                          description: Error type.
                          type: string
                          enum: [not_found, unauthorized, child_manifest]
                          example: not_found
                  warnings:
@z

@x
                    description: |
                      Warnings that can be ignored.
@y
                    description: |
                      Warnings that can be ignored.
@z

@x
                      These warnings include:
@y
                      These warnings include:
@z

@x
                      * is_active: warning when attempting to delete an image that is marked as active.
@y
                      * is_active: warning when attempting to delete an image that is marked as active.
@z

@x
                      * current_tag: warning when attempting to delete an image that has one or more current tags in the repository.
@y
                      * current_tag: warning when attempting to delete an image that has one or more current tags in the repository.
@z

@x
                      Warnings can be copied from the response to the request.
                    type: array
                    items:
                      type: object
                      properties:
                        repository:
                          description: Name of the repository of the image that caused the warning.
                          type: string
                          example: myrepo
                        digest:
                          description: Digest of the image that caused the warning.
                          type: string
                          example: sha256:1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopqr
                        warning:
                          description: Warning type.
                          type: string
                          enum: [is_active, current_tag]
                          example: current_tag
                        tags:
                          description: Current tags if warning is `current_tag`.
                          type: array
                          items:
                            type: string
                            example: latest
paths:
  /v2/users/login:
    post:
      tags: [Authentication]
      summary: Create authentication token
      operationId: PostUsersLogin
@y
                      Warnings can be copied from the response to the request.
                    type: array
                    items:
                      type: object
                      properties:
                        repository:
                          description: Name of the repository of the image that caused the warning.
                          type: string
                          example: myrepo
                        digest:
                          description: Digest of the image that caused the warning.
                          type: string
                          example: sha256:1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopqr
                        warning:
                          description: Warning type.
                          type: string
                          enum: [is_active, current_tag]
                          example: current_tag
                        tags:
                          description: Current tags if warning is `current_tag`.
                          type: array
                          items:
                            type: string
                            example: latest
paths:
  /v2/users/login:
    post:
      tags: [Authentication]
      summary: Create authentication token
      operationId: PostUsersLogin
@z

@x
      description: |
        Creates an authentication token that can be used to authenticate with the Docker Hub APIs.
@y
      description: |
        Creates an authentication token that can be used to authenticate with the Docker Hub APIs.
@z

@x
        The returned token is used in the HTTP Authentication header like `Authentication: JWT {TOKEN}`.
@y
        The returned token is used in the HTTP Authentication header like `Authentication: JWT {TOKEN}`.
@z

@x
        Most Docker Hub APIs require this token either to consume or to get detailed information. For example, to list images in a private repository.
      parameters:
@y
        Most Docker Hub APIs require this token either to consume or to get detailed information. For example, to list images in a private repository.
      parameters:
@z

@x
        - name: body
          in: body
          description: Login details.
          required: true
          schema:
            $ref: '#/definitions/UsersLoginRequest'
      responses:
        200:
          description: Authentication successful
          schema:
            $ref: '#/definitions/PostUsersLoginSuccessResponse'
        401:
          description: Authentication failed
          schema:
            $ref: '#/definitions/PostUsersLoginErrorResponse'
@y
        - name: body
          in: body
          description: Login details.
          required: true
          schema:
            $ref: '#/definitions/UsersLoginRequest'
      responses:
        200:
          description: Authentication successful
          schema:
            $ref: '#/definitions/PostUsersLoginSuccessResponse'
        401:
          description: Authentication failed
          schema:
            $ref: '#/definitions/PostUsersLoginErrorResponse'
@z

@x
  /v2/namespaces/{namespace}/repositories/{repository}/images-summary:
    get:
      tags: [Images]
      summary: Get summary of repository's images
@y
  /v2/namespaces/{namespace}/repositories/{repository}/images-summary:
    get:
      tags: [Images]
      summary: Get summary of repository's images
@z

@x
      description: |
        Gets the number of images in a repository and the number of images counted as active and inactive.
      operationId: GetNamespacesRepositoriesImagesSummary
      produces:
@y
      description: |
        Gets the number of images in a repository and the number of images counted as active and inactive.
      operationId: GetNamespacesRepositoriesImagesSummary
      produces:
@z

@x
        - application/json
      parameters:
@y
        - application/json
      parameters:
@z

@x
        - name: namespace
          in: path
          required: true
          description: Namespace of the repository.
          type: string
@y
        - name: namespace
          in: path
          required: true
          description: Namespace of the repository.
          type: string
@z

@x
        - name: repository
          in: path
          required: true
          description: Name of the repository.
          type: string
@y
        - name: repository
          in: path
          required: true
          description: Name of the repository.
          type: string
@z

@x
        - name: active_from
          in: query
          required: false
          description: | 
            Sets the time from which an image must have been pushed or pulled to be counted as active.
@y
        - name: active_from
          in: query
          required: false
          description: | 
            Sets the time from which an image must have been pushed or pulled to be counted as active.
@z

@x
            Defaults to 1 month before the current time.
          type: string
      responses:
        200:
          description: Success
          schema: 
            $ref: '#/definitions/GetNamespaceRepositoryImagesSummaryResponse'
        401:
@y
            Defaults to 1 month before the current time.
          type: string
      responses:
        200:
          description: Success
          schema: 
            $ref: '#/definitions/GetNamespaceRepositoryImagesSummaryResponse'
        401:
@z

@x
          description: Unauthorized - user does not have read access to the namespace
          schema:
            $ref: '#/definitions/ErrorResponse'
  /v2/namespaces/{namespace}/repositories/{repository}/images:
    get:
      tags: [Images]
      summary: Get details of repository's images
      description: Gets details on the images in a repository.
      operationId: GetNamespacesRepositoriesImages
      produces:
@y
          description: Unauthorized - user does not have read access to the namespace
          schema:
            $ref: '#/definitions/ErrorResponse'
  /v2/namespaces/{namespace}/repositories/{repository}/images:
    get:
      tags: [Images]
      summary: Get details of repository's images
      description: Gets details on the images in a repository.
      operationId: GetNamespacesRepositoriesImages
      produces:
@z

@x
        - application/json
      parameters:
@y
        - application/json
      parameters:
@z

@x
        - name: namespace
          in: path
          required: true
          description: Namespace of the repository.
          type: string
@y
        - name: namespace
          in: path
          required: true
          description: Namespace of the repository.
          type: string
@z

@x
        - name: repository
          in: path
          required: true
          description: Name of the repository.
          type: string
@y
        - name: repository
          in: path
          required: true
          description: Name of the repository.
          type: string
@z

@x
        - name: status
          in: query
          required: false
          description: Filters to only show images of this status.
          type: string
          enum: [active, inactive]
@y
        - name: status
          in: query
          required: false
          description: Filters to only show images of this status.
          type: string
          enum: [active, inactive]
@z

@x
        - name: ordering
          in: query
          required: false
@y
        - name: ordering
          in: query
          required: false
@z

@x
          description: |
            Orders the results by this property.
@y
          description: |
            Orders the results by this property.
@z

@x
            Prefixing with `-` sorts by descending order.
          type: string
@y
            Prefixing with `-` sorts by descending order.
          type: string
@z

@x
          enum: [last_activity, -last_activity, digest, -digest]
@y
          enum: [last_activity, -last_activity, digest, -digest]
@z

@x
        - name: active_from
          in: query
          required: false
          description: | 
            Sets the time from which an image must have been pushed or pulled to be counted as active.
@y
        - name: active_from
          in: query
          required: false
          description: | 
            Sets the time from which an image must have been pushed or pulled to be counted as active.
@z

@x
            Defaults to 1 month before the current time.
          type: string
@y
            Defaults to 1 month before the current time.
          type: string
@z

@x
        - name: page
          in: query
          required: false
          description: Page number to get. Defaults to 1.
          type: integer
@y
        - name: page
          in: query
          required: false
          description: Page number to get. Defaults to 1.
          type: integer
@z

@x
        - name: page_size
          in: query
          required: false
          description: Number of images to get per page. Defaults to 10. Max of 100.
          type: integer
      responses:
        200:
          description: Success
          schema: 
            $ref: '#/definitions/GetNamespaceRepositoryImagesResponse'
        401:
@y
        - name: page_size
          in: query
          required: false
          description: Number of images to get per page. Defaults to 10. Max of 100.
          type: integer
      responses:
        200:
          description: Success
          schema: 
            $ref: '#/definitions/GetNamespaceRepositoryImagesResponse'
        401:
@z

@x
          description: Unauthorized - user does not have read access to the namespace
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
@y
          description: Unauthorized - user does not have read access to the namespace
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
@z

@x
          description: Forbidden - this API is only available to users on Pro or Team plans
          schema:
            $ref: '#/definitions/ErrorResponse'
@y
          description: Forbidden - this API is only available to users on Pro or Team plans
          schema:
            $ref: '#/definitions/ErrorResponse'
@z

@x
  /v2/namespaces/{namespace}/delete-images:
    post:
      tags: [Images]
      summary: Delete images
      operationId: PostNamespacesDeleteImages
@y
  /v2/namespaces/{namespace}/delete-images:
    post:
      tags: [Images]
      summary: Delete images
      operationId: PostNamespacesDeleteImages
@z

@x
      description: |
        Deletes one or more images within a namespace. This is currently limited to a single repostiory.
@y
      description: |
        Deletes one or more images within a namespace. This is currently limited to a single repostiory.
@z

@x
        If you attempt to delete images that are marked as active or are currently tagged, the deletion does not happen and it displays the warnings.
        To continue with the deletion, you must ignore these warnings by putting them in the `ignore_warnings` property.
@y
        If you attempt to delete images that are marked as active or are currently tagged, the deletion does not happen and it displays the warnings.
        To continue with the deletion, you must ignore these warnings by putting them in the `ignore_warnings` property.
@z

@x
        Deleting a currently tagged image deletes the tag from the repository.
@y
        Deleting a currently tagged image deletes the tag from the repository.
@z

@x
        You cannot ignore errors. It is not possible to directly delete children of multi-arch images.
      parameters:
@y
        You cannot ignore errors. It is not possible to directly delete children of multi-arch images.
      parameters:
@z

@x
        - name: namespace
          in: path
          required: true
          description: Namespace of the repository.
          type: string
@y
        - name: namespace
          in: path
          required: true
          description: Namespace of the repository.
          type: string
@z

@x
        - description: Delete request.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PostNamespacesDeleteImagesRequest'
      responses:
        200:
          description: Deletion completed
          schema:
            $ref: '#/definitions/PostNamespacesDeleteImagesResponseSuccess'
        400:
          description: Deletion not possible
          schema:
            $ref: '#/definitions/PostNamespacesDeleteImagesResponseError'
        403:
@y
        - description: Delete request.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PostNamespacesDeleteImagesRequest'
      responses:
        200:
          description: Deletion completed
          schema:
            $ref: '#/definitions/PostNamespacesDeleteImagesResponseSuccess'
        400:
          description: Deletion not possible
          schema:
            $ref: '#/definitions/PostNamespacesDeleteImagesResponseError'
        403:
@z

@x
          description: Forbidden - this API is only available to users on Pro or Team plans
          schema:
            $ref: '#/definitions/ErrorResponse'
@y
          description: Forbidden - this API is only available to users on Pro or Team plans
          schema:
            $ref: '#/definitions/ErrorResponse'
@z
