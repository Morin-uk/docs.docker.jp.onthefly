%This is the change file for the original Docker's Documentation file.
%This is part of Japanese translation version for Docker's Documantation.

@x
swagger: '2.0'
schemes:
  - https
@y
swagger: '2.0'
schemes:
  - https
@z

@x
host: hub.docker.com
basePath: "/"
produces:
  - application/json
consumes:
  - application/json
@y
host: hub.docker.com
basePath: "/"
produces:
  - application/json
consumes:
  - application/json
@z

@x
info:
  title: Docker HUB API
  version: 'beta'
  x-logo:
    url: https://docs.docker.com/images/logo-docker-main.png
@y
info:
  title: Docker HUB API
  version: 'ベータ'
  x-logo:
    url: __URL____BASEURL__/images/logo-docker-main.png
@z

@x
  description: |
    Docker Hub is a service provided by Docker for finding and sharing container images with your team.
    It is the world's largest library and community for container images.
    In addition to the [Docker Hub UI](https://docs.docker.com/docker-hub/) and [Docker Hub CLI tool](https://github.com/docker/hub-tool#readme) (currently experimental),
    Docker provides an API that allows you to interact with Docker Hub.
    Browse through the Docker Hub API documentation to explore the supported endpoints.
@y
  description: |
    Docker Hub is a service provided by Docker for finding and sharing container images with your team.
    It is the world's largest library and community for container images.
    In addition to the [Docker Hub UI](https://docs.docker.com/docker-hub/) and [Docker Hub CLI tool](https://github.com/docker/hub-tool#readme) (currently experimental),
    Docker provides an API that allows you to interact with Docker Hub.
    Browse through the Docker Hub API documentation to explore the supported endpoints.
@z

@x
tags:
  # Primary objects
@y
tags:
  # Primary objects
@z

@x
  - name: Authentication
    x-displayName: Authentication
@y
  - name: Authentication
    x-displayName: 認証
@z

@x
    description: |
      Most Docker Hub API endpoints require you to authenticate using your Docker credentials.
      
      Additionally, similar to the Docker Hub UI features, API endpoint responses may vary depending on your plan (Free, Pro, or Team) and your account's permissions.
      To learn more about the features available in each plan and to upgrade your existing plan, see [Docker Pricing](https://www.docker.com/pricing).
@y
    description: |
      Docker Hub API のほとんどのエンドポイントでは、Docker 資格情報（credentials）を利用して認証されていることが必要になります。
      
      Additionally, similar to the Docker Hub UI features, API endpoint responses may vary depending on your plan (Free, Pro, or Team) and your account's permissions.
      To learn more about the features available in each plan and to upgrade your existing plan, see [Docker Pricing](https://www.docker.com/pricing).
@z

@x
  - name: Images
    x-displayName: Advanced image management
@y
  - name: Images
    x-displayName: 拡張イメージ管理
@z

@x
    description: |
      The Advanced Image Management API endpoints allow you to manage Docker images across all repositories.
      For more information, see [Advanced Image Management dashboard](https://docs.docker.com/docker-hub/image-management/).
@y
    description: |
      拡張イメージ管理（Advanced Image Management）の API エンドポイントを使うと、あらゆるリポジトリにわたっての Docker イメージ管理を行うことができます。
      詳しくは [拡張イメージ管理ダッシュボード](__URL____BASEURL__/docker-hub/image-management/) を参照してください。
@z

@x
  - name: Audit Logs
    x-displayName: Audit Logs
    description: |
      The Audit Logs API endpoints allow you to query audit log events across a namespace.
      For more information, see [Audit Log](https://docs.docker.com/docker-hub/audit-log/)
@y
  - name: Audit Logs
    x-displayName: 監査ログ
    description: |
      監査ログ（Audit Logs）API エンドポイントを用いると、名前空間全体の監査ログイベントを検索することができます。
      詳しくは [監査ログ](__URL____BASEURL__/docker-hub/audit-log/) を参照してください。
@z

@x
definitions:
  UsersLoginRequest:
    description: User login details
    type: object
    required: [username, password]
    properties:
      username: 
        description: The username of the Docker Hub account to authenticate with.
        type: string
        example: myusername
      password:
        description: The password of the Docker Hub account to authenticate with.
        type: string
        example: hunter2
@y
definitions:
  UsersLoginRequest:
    description: ユーザーログイン情報の詳細
    type: object
    required: [username, password]
    properties:
      username: 
        description: 認証済 Docker Hub アカウントのユーザー名。
        type: string
        example: myusername
      password:
        description: 認証済 Docker Hub アカウントのパスワード。
        type: string
        example: hunter2
@z

@x
  PostUsersLoginSuccessResponse:
    description: successful user login response
    type: object
    properties:
      token:
@y
  PostUsersLoginSuccessResponse:
    description: successful user login response
    type: object
    properties:
      token:
@z

@x
        description: |
          Created authentication token.
          This token can be used in the HTTP Authorization header as a JWT to authenticate with the Docker Hub APIs.
        type: string
        x-nullable: false
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
@y
        description: |
          生成された認証トークン。
          このトークンは Docker Hub API での認証のために、HTTP 認証ヘッダー内において JWT として利用されます。
        type: string
        x-nullable: false
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
@z

@x
  PostUsersLoginErrorResponse:
    description: failed user login response.
    type: object
    properties:
      details:
        description: Description of the error.
        type: string
        x-nullable: false
        example: Incorrect authentication credentials
@y
  PostUsersLoginErrorResponse:
    description: failed user login response.
    type: object
    properties:
      details:
        description: エラー内容。
        type: string
        x-nullable: false
        example: Incorrect authentication credentials
@z

@x
  ErrorInfo:
    description: Context information for an error used for diagnostics.
    type: object
    properties:
      api_call_docker_id:
        description: ID of docker user.
        type: string
      api_call_name:
        description: Name of the API operation called.
        type: string
      api_call_start:
        description: Date/time of call start.
        type: string
      api_call_txnid:
        description: Unique ID for this call.
        type: string
@y
  ErrorInfo:
    description: 診断に利用されるエラーコンテキスト情報。
    type: object
    properties:
      api_call_docker_id:
        description: Docker ユーザーの ID。
        type: string
      api_call_name:
        description: 呼び出された API 処理名。
        type: string
      api_call_start:
        description: 呼び出しが開始された日付時刻。
        type: string
      api_call_txnid:
        description: 本呼び出しに固有の ID。
        type: string
@z

@x
  ErrorResponse:
    description: Represents an error.
    type: object
    properties:
      txnid:
        description: Unique ID for this call.
        type: string
      message:
        description: The error message.
        type: string
      errinfo:
        $ref: '#/definitions/ErrorInfo'
@y
  ErrorResponse:
    description: エラー。
    type: object
    properties:
      txnid:
        description: 本呼び出しに固有の ID。
        type: string
      message:
        description: エラーメッセージ。
        type: string
      errinfo:
        $ref: '#/definitions/ErrorInfo'
@z

@x
  GetNamespaceRepositoryImagesSummaryResponse:
    description: Summary information for images in a repository.
    type: object
    properties:
      active_from:
        description: Time from which an image must have been pushed or pulled to be counted as active.
        type: string
        example: '2021-01-25T14:25:37.076343059Z'
@y
  GetNamespaceRepositoryImagesSummaryResponse:
    description: 1 つのリポジトリ内のイメージに対する概要情報。
    type: object
    properties:
      active_from:
        description: イメージがプッシュまたはプルされて以降、アクティブとしてカウントされるための経過時間。
        type: string
        example: '2021-01-25T14:25:37.076343059Z'
@z

@x
      statistics:
        type: object
        properties:
          total:
            description: Number of images in this repository.
            type: integer
            example: 3
          active:
            description: Number of images counted as active in this repository.
            type: integer
            example: 2
          inactive:
            description: Number of images counted as inactive in this repository.
            type: integer
            example: 1
@y
      statistics:
        type: object
        properties:
          total:
            description: このリポジトリ内にあるイメージ数。
            type: integer
            example: 3
          active:
            description: このリポジトリ内にてアクティブとしてカウントされたイメージ数。
            type: integer
            example: 2
          inactive:
            description: このリポジトリ内にて非アクティブとしてカウントされたイメージ数。
            type: integer
            example: 1
@z

@x
  GetNamespaceRepositoryImagesResponse:
    description: Paginated list of images in a repository.
    type: object
    properties:
      count:
        description: Total count of images in the repository.
        type: integer
        example: 100
      next:
        description: Link to the next page with the same query parameters if there are more images.
        type: string
        example: https://hub.docker.com/v2/namespaces/mynamespace/repositories/myrepo/images?&page=4&page_size=20
        x-nullable: true
@y
  GetNamespaceRepositoryImagesResponse:
    description: 1 つのリポジトリ内においてページ分けされたイメージ一覧。
    type: object
    properties:
      count:
        description: リポジトリ内のイメージ総数。
        type: integer
        example: 100
      next:
        description: 同一クエリーパラメーターによるイメージがまだ存在する場合の次ページへのリンク。
        type: string
        example: https://hub.docker.com/v2/namespaces/mynamespace/repositories/myrepo/images?&page=4&page_size=20
        x-nullable: true
@z

@x
      previous:
        description: Link to the previous page with the same query parameters if not on first page.
        type: string
        example: https://hub.docker.com/v2/namespaces/mynamespace/repositories/myrepo/images?&page=2&page_size=20
        x-nullable: true
@y
      previous:
        description: 同一クエリーパラメーターによるイメージ一覧の 2 ページめ以降である場合の前ページへのリンク。
        type: string
        example: https://hub.docker.com/v2/namespaces/mynamespace/repositories/myrepo/images?&page=2&page_size=20
        x-nullable: true
@z

@x
      results:
        type: array
        description: Image details.
        items:
          type: object
          properties:
            namespace:
              description: The repository namespace.
              type: string
              example: mynamespace
            repository:
              description: The repository name.
              type: string
              example: myrepo
            digest:
              description: The image's digest.
              type: string
              example: sha256:1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopqr
            tags:
              description: The current and historical tags for this image.
              type: array
              items:
                type: object
                properties:
                  tag:
                    description: The tag.
                    type: string
                    example: latest
                  is_current:
@y
      results:
        type: array
        description: イメージの詳細。
        items:
          type: object
          properties:
            namespace:
              description: リポジトリの名前空間。
              type: string
              example: mynamespace
            repository:
              description: リポジトリ名。
              type: string
              example: myrepo
            digest:
              description: イメージのダイジェスト値。
              type: string
              example: sha256:1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopqr
            tags:
              description: このイメージに対する現在と過去のタグ。
              type: array
              items:
                type: object
                properties:
                  tag:
                    description: タグ。
                    type: string
                    example: latest
                  is_current:
@z

@x
                    description: |
                      `true` if the tag currently points to this image.

                      `false` if it has been overwritten to point at a different image.
                    type: boolean
                    example: true
@y
                    description: |
                      このタグがそのイメージを指し示している場合に`true`。

                      別イメージを指し示すようにオーバーライドされている場合は`false`。
                    type: boolean
                    example: true
@z

@x
            last_pushed:
              description: Time when this image was last pushed.
              type: string
              x-nullable: true
              example: '2021-02-24T22:05:27.526308Z'
@y
            last_pushed:
              description: イメージが最後にプッシュされた時刻。
              type: string
              x-nullable: true
              example: '2021-02-24T22:05:27.526308Z'
@z

@x
            last_pulled:
              description: Time when this image was last pulled. Note this is updated at most once per hour.
              type: string
              x-nullable: true
              example: '2021-02-24T23:16:10.200008Z'
@y
            last_pulled:
              description: イメージが最後にプルされた時刻。これは少なくとも 1 時間ごとに更新されます。
              type: string
              x-nullable: true
              example: '2021-02-24T23:16:10.200008Z'
@z

@x
            status:
              description: The status of the image based on its last activity against the `active_from` time.
              type: string
              enum: [active, inactive]
              example: active
@y
            status:
              description: "`active_from` にて定まる時間によらず、最後の操作に基づいて決まるイメージ状態。"
              type: string
              enum: [active, inactive]
              example: active
@z

@x
  GetNamespaceRepositoryImagesTagsResponse:
    description: Paginated list of tags for this repository.
    type: object
    properties:
      count:
        description: Total count of tags for this image.
        type: integer
        example: 100
      next:
        description: Link to the next page if there are more tags.
        type: string
        example: https://hub.docker.com/v2/namespaces/mynamespace/repositories/myrepo/images/sha256:mydigest/tags?&page=4&page_size=20
        x-nullable: true
      previous:
        description: Link to the previous page if not on first page.
        type: string
        example: https://hub.docker.com/v2/namespaces/mynamespace/repositories/myrepo/images/sha256:mydigest/tags?&page=2&page_size=20
        x-nullable: true
      results:
        description: The current and historical tags for this image.
        type: array
        items:
          type: object
          properties:
            tag:
              description: The tag.
              type: string
              example: latest
            is_current:
              description: |
                `true` if the tag currently points to this image.

                `false` if it has been overwritten to point at a different image.
              type: boolean
              example: true
@y
  GetNamespaceRepositoryImagesTagsResponse:
    description: このリポジトリに対するタグの一覧をページ化します。
    type: object
    properties:
      count:
        description: このイメージに対するタグ総数。
        type: integer
        example: 100
      next:
        description: さらにタグが存在する場合の次ページへのリンク。
        type: string
        example: https://hub.docker.com/v2/namespaces/mynamespace/repositories/myrepo/images/sha256:mydigest/tags?&page=4&page_size=20
        x-nullable: true
      previous:
        description: 先頭ページでない場合の前ページへのリンク。
        type: string
        example: https://hub.docker.com/v2/namespaces/mynamespace/repositories/myrepo/images/sha256:mydigest/tags?&page=2&page_size=20
        x-nullable: true
      results:
        description: このイメージにおける現在およびかつてのタグ一覧。
        type: array
        items:
          type: object
          properties:
            tag:
              description: タグ。
              type: string
              example: latest
            is_current:
              description: |
                タグが現在このイメージを指し示している場合に`true`。

                別イメージを指し示すように上書きされている場合に`false`。
              type: boolean
              example: true
@z

@x
  PostNamespacesDeleteImagesRequest:
    description: Delete images request.
    type: object
    properties:
      dry_run: 
        description: If `true` then will check and return errors and unignored warnings for the deletion request but will not delete any images.
        type: boolean
        example: false
      active_from:
        description: | 
            Sets the time from which an image must have been pushed or pulled to be counted as active.

            Defaults to 1 month before the current time.
        type: string
        example: '2020-12-01T12:00:00Z'
@y
  PostNamespacesDeleteImagesRequest:
    description: Delete images request.
    type: object
    properties:
      dry_run: 
        description: If `true` then will check and return errors and unignored warnings for the deletion request but will not delete any images.
        type: boolean
        example: false
      active_from:
        description: | 
            Sets the time from which an image must have been pushed or pulled to be counted as active.

            Defaults to 1 month before the current time.
        type: string
        example: '2020-12-01T12:00:00Z'
@z

@x
      manifests:
        description: Image manifests to delete.
        type: array
        items:
          type: object
          required: [repository, digest]
          properties:
            repository:
              description: Name of the repository to delete the image from.
              type: string
              example: myrepo
            digest:
              description: Digest of the image to delete.
              type: string
              example: sha256:1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopqr
      ignore_warnings:
@y
      manifests:
        description: Image manifests to delete.
        type: array
        items:
          type: object
          required: [repository, digest]
          properties:
            repository:
              description: Name of the repository to delete the image from.
              type: string
              example: myrepo
            digest:
              description: Digest of the image to delete.
              type: string
              example: sha256:1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopqr
      ignore_warnings:
@z

@x
        description: |
          Warnings to ignore. If a warning is not ignored then no deletions will happen and the warning is returned in the response.
@y
        description: |
          Warnings to ignore. If a warning is not ignored then no deletions will happen and the warning is returned in the response.
@z

@x
          These warnings include:
@y
          These warnings include:
@z

@x
          * is_active: warning when attempting to delete an image that is marked as active.
          
          * current_tag: warning when attempting to delete an image that has one or more current tags in the repository.
@y
          * is_active: warning when attempting to delete an image that is marked as active.
          
          * current_tag: warning when attempting to delete an image that has one or more current tags in the repository.
@z

@x
          Warnings can be copied from the response to the request.
        type: array
        items:
          type: object
          required: [repository, digest, warning]
          properties:
            repository:
              description: Name of the repository of the image to ignore the warning for.
              type: string
              example: myrepo
            digest:
              description: Digest of the image to ignore the warning for.
              type: string
              example: sha256:1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopqr
            warning:
              description: Warning to ignore.
              type: string
              enum: [is_active, current_tag]
              example: current_tag
            tags:
              description: Current tags to ignore.
              type: array
              items:
                type: string
                example: latest
@y
          Warnings can be copied from the response to the request.
        type: array
        items:
          type: object
          required: [repository, digest, warning]
          properties:
            repository:
              description: Name of the repository of the image to ignore the warning for.
              type: string
              example: myrepo
            digest:
              description: Digest of the image to ignore the warning for.
              type: string
              example: sha256:1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopqr
            warning:
              description: Warning to ignore.
              type: string
              enum: [is_active, current_tag]
              example: current_tag
            tags:
              description: Current tags to ignore.
              type: array
              items:
                type: string
                example: latest
@z

@x
  PostNamespacesDeleteImagesResponseSuccess:
    description: Successful delete images response.
    type: object
    properties:
      dry_run:
        description: Whether the request was a dry run or not.
        type: boolean
        example: false
      metrics:
        type: object
        properties:
          manifest_deletes:
            description: Number of manifests deleted.
            type: integer
            example: 3
          manifest_errors:
            description: Number of manifests that failed to delete.
            type: integer
            example: 0
          tag_deletes:
            description: Number of tags deleted.
            type: integer
            example: 1
          tag_errors:
            description: Number of tags that failed to delete.
            type: integer
            example: 0
@y
  PostNamespacesDeleteImagesResponseSuccess:
    description: Successful delete images response.
    type: object
    properties:
      dry_run:
        description: Whether the request was a dry run or not.
        type: boolean
        example: false
      metrics:
        type: object
        properties:
          manifest_deletes:
            description: Number of manifests deleted.
            type: integer
            example: 3
          manifest_errors:
            description: Number of manifests that failed to delete.
            type: integer
            example: 0
          tag_deletes:
            description: Number of tags deleted.
            type: integer
            example: 1
          tag_errors:
            description: Number of tags that failed to delete.
            type: integer
            example: 0
@z

@x
  PostNamespacesDeleteImagesResponseError:
    description: Deletion not possible.
    type: object
    properties:
      txnid:
        description: Unique ID for this call.
        type: string
      message:
        description: The error message.
        type: string
      errinfo:
        allOf:
          - $ref: '#/definitions/ErrorInfo'
@y
  PostNamespacesDeleteImagesResponseError:
    description: Deletion not possible.
    type: object
    properties:
      txnid:
        description: 本呼び出しの固有 ID。
        type: string
      message:
        description: エラーメッセージ。
        type: string
      errinfo:
        allOf:
          - $ref: '#/definitions/ErrorInfo'
@z

@x
          - type: object
            properties:
              type:
                description: Type of error.
                type: string
                example: validation
              details:
                type: object
                properties:
                  errors:
                    description: Errors from validating delete request. These cannot be ignored.
                    type: array
                    items:
                      type: object
                      properties:
                        repository:
                          description: Name of the repository of the image that caused the error.
                          type: string
                          example: myrepo
                        digest: 
                          description: Digest of the image that caused the error.
                          type: string
                          example: sha256:1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopqr
                        error:
                          description: Error type.
                          type: string
                          enum: [not_found, unauthorized, child_manifest]
                          example: not_found
                  warnings:
@y
          - type: object
            properties:
              type:
                description: Type of error.
                type: string
                example: validation
              details:
                type: object
                properties:
                  errors:
                    description: Errors from validating delete request. These cannot be ignored.
                    type: array
                    items:
                      type: object
                      properties:
                        repository:
                          description: Name of the repository of the image that caused the error.
                          type: string
                          example: myrepo
                        digest: 
                          description: Digest of the image that caused the error.
                          type: string
                          example: sha256:1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopqr
                        error:
                          description: Error type.
                          type: string
                          enum: [not_found, unauthorized, child_manifest]
                          example: not_found
                  warnings:
@z

@x
                    description: |
                      Warnings that can be ignored.
@y
                    description: |
                      Warnings that can be ignored.
@z

@x
                      These warnings include:
@y
                      These warnings include:
@z

@x
                      * is_active: warning when attempting to delete an image that is marked as active.
@y
                      * is_active: warning when attempting to delete an image that is marked as active.
@z

@x
                      * current_tag: warning when attempting to delete an image that has one or more current tags in the repository.
@y
                      * current_tag: warning when attempting to delete an image that has one or more current tags in the repository.
@z

@x
                      Warnings can be copied from the response to the request.
                    type: array
                    items:
                      type: object
                      properties:
                        repository:
                          description: Name of the repository of the image that caused the warning.
                          type: string
                          example: myrepo
                        digest:
                          description: Digest of the image that caused the warning.
                          type: string
                          example: sha256:1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopqr
                        warning:
                          description: Warning type.
                          type: string
                          enum: [is_active, current_tag]
                          example: current_tag
                        tags:
                          description: Current tags if warning is `current_tag`.
                          type: array
                          items:
                            type: string
                            example: latest
@y
                      Warnings can be copied from the response to the request.
                    type: array
                    items:
                      type: object
                      properties:
                        repository:
                          description: Name of the repository of the image that caused the warning.
                          type: string
                          example: myrepo
                        digest:
                          description: Digest of the image that caused the warning.
                          type: string
                          example: sha256:1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopqr
                        warning:
                          description: Warning type.
                          type: string
                          enum: [is_active, current_tag]
                          example: current_tag
                        tags:
                          description: Current tags if warning is `current_tag`.
                          type: array
                          items:
                            type: string
                            example: latest
@z

@x
  protobufAny:
    type: object
    properties:
      type_url:
        type: string
      value:
        type: string
        format: byte
@y
  protobufAny:
    type: object
    properties:
      type_url:
        type: string
      value:
        type: string
        format: byte
@z

@x
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          $ref: '#/definitions/protobufAny'
@y
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          $ref: '#/definitions/protobufAny'
@z

@x
  AuditLogAction:
    type: object
    properties:
      name:
        type: string
        description: Name of audit log action.
      description:
        type: string
        description: Description of audit log action.
      label:
        type: string
        description: Label for audit log action.
    description: Audit Log action
@y
  AuditLogAction:
    type: object
    properties:
      name:
        type: string
        description: Name of audit log action.
      description:
        type: string
        description: Description of audit log action.
      label:
        type: string
        description: Label for audit log action.
    description: Audit Log action
@z

@x
  AuditLogActions:
    type: object
    properties:
      actions:
        type: array
        items:
          $ref: '#/definitions/AuditLogAction'
        description: List of audit log actions.
      label:
        type: string
        description: Grouping label for a particular set of audit log actions.
@y
  AuditLogActions:
    type: object
    properties:
      actions:
        type: array
        items:
          $ref: '#/definitions/AuditLogAction'
        description: List of audit log actions.
      label:
        type: string
        description: Grouping label for a particular set of audit log actions.
@z

@x
  GetAuditActionsResponse:
    type: object
    properties:
      actions:
        type: object
        additionalProperties:
          $ref: '#/definitions/AuditLogActions'
        description: Map of audit log actions.
    description: GetAuditActions response.
@y
  GetAuditActionsResponse:
    type: object
    properties:
      actions:
        type: object
        additionalProperties:
          $ref: '#/definitions/AuditLogActions'
        description: Map of audit log actions.
    description: GetAuditActions response.
@z

@x
  GetAuditLogsResponse:
    type: object
    properties:
      logs:
        type: array
        items:
          $ref: '#/definitions/AuditLog'
        description: List of audit log events.
    description: GetAuditLogs response.
@y
  GetAuditLogsResponse:
    type: object
    properties:
      logs:
        type: array
        items:
          $ref: '#/definitions/AuditLog'
        description: List of audit log events.
    description: GetAuditLogs response.
@z

@x
  AuditLog:
    type: object
    properties:
      account:
        type: string
      action:
        type: string
      name:
        type: string
      actor:
        type: string
      data:
        type: object
        additionalProperties:
          type: string
      timestamp:
        type: string
        format: date-time
      action_description:
        type: string
    description: Audit log event.
@y
  AuditLog:
    type: object
    properties:
      account:
        type: string
      action:
        type: string
      name:
        type: string
      actor:
        type: string
      data:
        type: object
        additionalProperties:
          type: string
      timestamp:
        type: string
        format: date-time
      action_description:
        type: string
    description: Audit log event.
@z

@x
paths:
  /v2/users/login:
    post:
      tags: [Authentication]
      summary: Create authentication token
      operationId: PostUsersLogin
      description: |
        Creates an authentication token that can be used to authenticate with the Docker Hub APIs.

        The returned token is used in the HTTP Authorization header like `Authorization: JWT {TOKEN}`.

        Most Docker Hub APIs require this token either to consume or to get detailed information. For example, to list images in a private repository.
@y
paths:
  /v2/users/login:
    post:
      tags: [Authentication]
      summary: 認証トークンの生成
      operationId: PostUsersLogin
      description: |
        Docker Hub API の利用にあたっての認証を行うための認証トークンを生成します。

        返されるトークンは、`Authorization: JWT {TOKEN}`のように HTTP 認証ヘッダーにおいて利用されます。

        Docker Hub API のほとんどにおいて、このトークンは消費および詳細情報取得に利用されます。たとえばプライベートリポジトリ内のイメージ一覧を取得する際に利用されます。
@z

@x
      parameters:
        - name: body
          in: body
          description: Login details.
          required: true
          schema:
            $ref: '#/definitions/UsersLoginRequest'
@y
      parameters:
        - name: body
          in: body
          description: ログイン情報の詳細
          required: true
          schema:
            $ref: '#/definitions/UsersLoginRequest'
@z

@x
      responses:
        200:
          description: Authentication successful
          schema:
            $ref: '#/definitions/PostUsersLoginSuccessResponse'
        401:
          description: Authentication failed
          schema:
            $ref: '#/definitions/PostUsersLoginErrorResponse'
@y
      responses:
        200:
          description: Authentication successful
          schema:
            $ref: '#/definitions/PostUsersLoginSuccessResponse'
        401:
          description: Authentication failed
          schema:
            $ref: '#/definitions/PostUsersLoginErrorResponse'
@z

@x
  /v2/namespaces/{namespace}/repositories/{repository}/images-summary:
    get:
      tags: [Images]
      summary: Get summary of repository's images
@y
  /v2/namespaces/{namespace}/repositories/{repository}/images-summary:
    get:
      tags: [Images]
      summary: リポジトリ内イメージの概要取得
@z

@x
      description: |
        Gets the number of images in a repository and the number of images counted as active and inactive.
      operationId: GetNamespacesRepositoriesImagesSummary
      produces:
        - application/json
@y
      description: |
        1 つのリポジトリ内のイメージ数、およびアクティブ、非アクティブのイメージ数を取得します。
      operationId: GetNamespacesRepositoriesImagesSummary
      produces:
        - application/json
@z

@x
      parameters:
        - name: namespace
          in: path
          required: true
          description: Namespace of the repository.
          type: string
@y
      parameters:
        - name: namespace
          in: path
          required: true
          description: リポジトリの名前空間。
          type: string
@z

@x
        - name: repository
          in: path
          required: true
          description: Name of the repository.
          type: string
@y
        - name: repository
          in: path
          required: true
          description: リポジトリ名。
          type: string
@z

@x
        - name: active_from
          in: query
          required: false
          description: | 
            Sets the time from which an image must have been pushed or pulled to be counted as active.

            Defaults to 1 month before the current time.
          type: string
@y
        - name: active_from
          in: query
          required: false
          description: | 
            イメージをアクティブ状態としてカウントするのは、プッシュまたはプルされてからどれだけ経過したものであるのかを時間設定します。

            デフォルトは現在時刻から 1 ヵ月前。
          type: string
@z

@x
      responses:
        200:
          description: Success
          schema: 
            $ref: '#/definitions/GetNamespaceRepositoryImagesSummaryResponse'
        401:
@y
      responses:
        200:
          description: Success
          schema: 
            $ref: '#/definitions/GetNamespaceRepositoryImagesSummaryResponse'
        401:
@z

@x
          description: Unauthorized - user does not have read access to the namespace
          schema:
            $ref: '#/definitions/ErrorResponse'
@y
          description: Unauthorized - user does not have read access to the namespace
          schema:
            $ref: '#/definitions/ErrorResponse'
@z

@x
  /v2/namespaces/{namespace}/repositories/{repository}/images:
    get:
      tags: [Images]
      summary: Get details of repository's images
      description: Gets details on the images in a repository.
      operationId: GetNamespacesRepositoriesImages
      produces:
        - application/json
@y
  /v2/namespaces/{namespace}/repositories/{repository}/images:
    get:
      tags: [Images]
      summary: リポジトリイメージの詳細取得
      description: 1 つのリポジトリ内にあるイメージの詳細情報を取得します。
      operationId: GetNamespacesRepositoriesImages
      produces:
        - application/json
@z

@x
      parameters:
        - name: namespace
          in: path
          required: true
          description: Namespace of the repository.
          type: string
@y
      parameters:
        - name: namespace
          in: path
          required: true
          description: リポジトリの名前空間。
          type: string
@z

@x
        - name: repository
          in: path
          required: true
          description: Name of the repository.
          type: string
@y
        - name: repository
          in: path
          required: true
          description: リポジトリ名。
          type: string
@z

@x
        - name: status
          in: query
          required: false
          description: Filters to only show images of this status.
          type: string
          enum: [active, inactive]
@y
        - name: status
          in: query
          required: false
          description: ここで指定するイメージのみを検索するためのフィルター。
          type: string
          enum: [active, inactive]
@z

@x
        - name: currently_tagged
          in: query
          required: false
          type: boolean
          description: | 
            Filters to only show images with:
            * `true`: at least 1 current tag.
            * `false`: no current tags.
@y
        - name: currently_tagged
          in: query
          required: false
          type: boolean
          description: | 
            以下により表示イメージをフィルタリングします。
            * `true` は少なくともカレントなタグを 1 つ表示します。
            * `false` はカレントなタグを表示しません。
@z

@x
        - name: ordering
          in: query
          required: false
          description: |
            Orders the results by this property.

            Prefixing with `-` sorts by descending order.
          type: string
          enum: [last_activity, -last_activity, digest, -digest]
@y
        - name: ordering
          in: query
          required: false
          description: |
            このプロパティにより結果の並び替えを行います。

            先頭に`-`をつけると降順で並び替えを行います。
          type: string
          enum: [last_activity, -last_activity, digest, -digest]
@z

@x
        - name: active_from
          in: query
          required: false
          description: | 
            Sets the time from which an image must have been pushed or pulled to be counted as active.

            Defaults to 1 month before the current time.
          type: string
@y
        - name: active_from
          in: query
          required: false
          description: | 
            イメージをアクティブ状態としてカウントするのは、プッシュまたはプルされてからどれだけ経過したものであるのかを時間設定します。

            デフォルトは現在時刻から 1 ヵ月前。
          type: string
@z

@x
        - name: page
          in: query
          required: false
          description: Page number to get. Defaults to 1.
          type: integer
@y
        - name: page
          in: query
          required: false
          description: 取得するページ数。デフォルトは 1。
          type: integer
@z

@x
        - name: page_size
          in: query
          required: false
          description: Number of images to get per page. Defaults to 10. Max of 100.
          type: integer
@y
        - name: page_size
          in: query
          required: false
          description: 各ページごとに取得するイメージ数。デフォルトは 10。最大値は 100。
          type: integer
@z

@x
      responses:
        200:
          description: Success
          schema: 
            $ref: '#/definitions/GetNamespaceRepositoryImagesResponse'
@y
      responses:
        200:
          description: Success
          schema: 
            $ref: '#/definitions/GetNamespaceRepositoryImagesResponse'
@z

@x
        401:
          description: Unauthorized - user does not have read access to the namespace.
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: Forbidden - this API is only available to users on Pro or Team plans.
          schema:
            $ref: '#/definitions/ErrorResponse'
@y
        401:
          description: Unauthorized - user does not have read access to the namespace.
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: Forbidden - this API is only available to users on Pro or Team plans.
          schema:
            $ref: '#/definitions/ErrorResponse'
@z

@x
  /v2/namespaces/{namespace}/repositories/{repository}/images/{digest}/tags:
    get:
      tags: [Images]
      summary: Get image's tags
      description: Gets current and historical tags for an image.
      operationId: GetNamespacesRepositoriesImagesTags
      produces:
        - application/json
@y
  /v2/namespaces/{namespace}/repositories/{repository}/images/{digest}/tags:
    get:
      tags: [Images]
      summary: Get image's tags
      description: Gets current and historical tags for an image.
      operationId: GetNamespacesRepositoriesImagesTags
      produces:
        - application/json
@z

@x
      parameters:
        - name: namespace
          in: path
          required: true
          description: Namespace of the repository.
          type: string
        - name: repository
          in: path
          required: true
          description: Name of the repository.
          type: string
        - name: digest
          in: path
          required: true
          description: Digest of the image.
          type: string
        - name: page
          in: query
          required: false
          description: Page number to get. Defaults to 1.
          type: integer
        - name: page_size
          in: query
          required: false
          description: Number of images to get per page. Defaults to 10. Max of 100.
          type: integer
@y
      parameters:
        - name: namespace
          in: path
          required: true
          description: Namespace of the repository.
          type: string
        - name: repository
          in: path
          required: true
          description: Name of the repository.
          type: string
        - name: digest
          in: path
          required: true
          description: Digest of the image.
          type: string
        - name: page
          in: query
          required: false
          description: Page number to get. Defaults to 1.
          type: integer
        - name: page_size
          in: query
          required: false
          description: Number of images to get per page. Defaults to 10. Max of 100.
          type: integer
@z

@x
      responses:
        200:
          description: Success
          schema: 
            $ref: '#/definitions/GetNamespaceRepositoryImagesTagsResponse'
@y
      responses:
        200:
          description: Success
          schema: 
            $ref: '#/definitions/GetNamespaceRepositoryImagesTagsResponse'
@z

@x
        401:
          description: Unauthorized - user does not have read access to the namespace
          schema:
            $ref: '#/definitions/ErrorResponse'
@y
        401:
          description: Unauthorized - user does not have read access to the namespace
          schema:
            $ref: '#/definitions/ErrorResponse'
@z

@x
        403:
          description: Forbidden - this API is only available to users on Pro or Team plans
          schema:
            $ref: '#/definitions/ErrorResponse'
@y
        403:
          description: Forbidden - this API is only available to users on Pro or Team plans
          schema:
            $ref: '#/definitions/ErrorResponse'
@z

@x
  /v2/namespaces/{namespace}/delete-images:
    post:
      tags: [Images]
      summary: Delete images
      operationId: PostNamespacesDeleteImages
@y
  /v2/namespaces/{namespace}/delete-images:
    post:
      tags: [Images]
      summary: イメージの削除
      operationId: PostNamespacesDeleteImages
@z

@x
      description: |
        Deletes one or more images within a namespace. This is currently limited to a single repostiory.

        If you attempt to delete images that are marked as active or are currently tagged, the deletion does not happen and it displays the warnings.
        To continue with the deletion, you must ignore these warnings by putting them in the `ignore_warnings` property.

        Deleting a currently tagged image deletes the tag from the repository.

        You cannot ignore errors. It is not possible to directly delete children of multi-arch images.
@y
      description: |
        1 つの名前空間内にある 1 つまたは複数のイメージを削除します。現在のところこの機能は 1 つのリポジトリ内に限定されています。

        アクティブなイメージまたは現在カレントなタグとなっているイメージを削除しようとした場合、削除処理は行われず警告メッセージが出力されます。
        削除を継続して行いたい場合は、`ignore_warnings`プロパティに各種の値を設定すれば警告を無視して削除ができます。

        現在タグづけされているイメージを削除すると、このリポジトリからそのタグが削除されます。

        エラーを無視することはできません。マルチアーキテクチャーイメージの子イメージを直接削除することはできません。
@z

@x
      parameters:
        - name: namespace
          in: path
          required: true
          description: Namespace of the repository.
          type: string
        - description: Delete request.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PostNamespacesDeleteImagesRequest'
@y
      parameters:
        - name: namespace
          in: path
          required: true
          description: リポジトリの名前空間。
          type: string
        - description: 削除リクエスト。
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PostNamespacesDeleteImagesRequest'
@z

@x
      responses:
        200:
          description: Deletion completed
          schema:
            $ref: '#/definitions/PostNamespacesDeleteImagesResponseSuccess'
        400:
          description: Deletion not possible
          schema:
            $ref: '#/definitions/PostNamespacesDeleteImagesResponseError'
        403:
@y
      responses:
        200:
          description: Deletion completed
          schema:
            $ref: '#/definitions/PostNamespacesDeleteImagesResponseSuccess'
        400:
          description: Deletion not possible
          schema:
            $ref: '#/definitions/PostNamespacesDeleteImagesResponseError'
        403:
@z

@x
          description: Forbidden - this API is only available to users on Pro or Team plans
          schema:
            $ref: '#/definitions/ErrorResponse'
@y
          description: Forbidden - this API is only available to users on Pro or Team plans
          schema:
            $ref: '#/definitions/ErrorResponse'
@z

@x
  /v2/auditlogs/{account}:
    get:
      summary: Returns list of audit log  events.
      description: Get audit log events for a given namespace.
      operationId: AuditLogs_GetAuditLogs
@y
  /v2/auditlogs/{account}:
    get:
      summary: Returns list of audit log  events.
      description: Get audit log events for a given namespace.
      operationId: AuditLogs_GetAuditLogs
@z

@x
      responses:
        200:
          description: A successful response.
          schema:
            $ref: '#/definitions/GetAuditLogsResponse'
          examples:
            application/json:
              logs:
                - account: docker
                  action: repo.tag.push
                  name: docker/example
                  actor: docker
                  data:
                    digest: 'sha256:c1ae9c435032a276f80220c7d9b40f76266bbe79243d34f9cda30b76fe114dfa'
                    tag: latest
                  timestamp: '2021-02-19T01:34:35Z'
                  action_description: 'pushed the tag latest with the digest sha256:c1ae9c435032a to the repository docker/example'
@y
      responses:
        200:
          description: A successful response.
          schema:
            $ref: '#/definitions/GetAuditLogsResponse'
          examples:
            application/json:
              logs:
                - account: docker
                  action: repo.tag.push
                  name: docker/example
                  actor: docker
                  data:
                    digest: 'sha256:c1ae9c435032a276f80220c7d9b40f76266bbe79243d34f9cda30b76fe114dfa'
                    tag: latest
                  timestamp: '2021-02-19T01:34:35Z'
                  action_description: 'pushed the tag latest with the digest sha256:c1ae9c435032a to the repository docker/example'
@z

@x
        429:
          description: ''
          schema: {}
          examples:
            application/json:
              detail: Rate limit exceeded
              error: false
@y
        429:
          description: ''
          schema: {}
          examples:
            application/json:
              detail: Rate limit exceeded
              error: false
@z

@x
        500:
          description: ''
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
@y
        500:
          description: ''
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
@z

@x
      parameters:
        - name: account
          description: Namespace to query audit logs for.
          in: path
          required: true
          type: string
@y
      parameters:
        - name: account
          description: Namespace to query audit logs for.
          in: path
          required: true
          type: string
@z

@x
        - name: action
          description: 'action name one of ["repo.tag.push", ...]. Optional parameter to filter specific audit log actions.'
          in: query
          required: false
          type: string
@y
        - name: action
          description: 'action name one of ["repo.tag.push", ...]. Optional parameter to filter specific audit log actions.'
          in: query
          required: false
          type: string
@z

@x
        - name: name
          description: 'name. Optional parameter to filter audit log events to a specific name. For repository events, this is the name of the repository. For organization events, this is the name of the organization. For team member events, this is the username of the team member.'
          in: query
          required: false
          type: string
@y
        - name: name
          description: 'name. Optional parameter to filter audit log events to a specific name. For repository events, this is the name of the repository. For organization events, this is the name of the organization. For team member events, this is the username of the team member.'
          in: query
          required: false
          type: string
@z

@x
        - name: actor
          description: actor name. Optional parameter to filter audit log events to the specific user who triggered the event.
          in: query
          required: false
          type: string
@y
        - name: actor
          description: actor name. Optional parameter to filter audit log events to the specific user who triggered the event.
          in: query
          required: false
          type: string
@z

@x
        - name: from
          description: Start of the time window you wish to query audit events for.
          in: query
          required: false
          type: string
          format: date-time
@y
        - name: from
          description: Start of the time window you wish to query audit events for.
          in: query
          required: false
          type: string
          format: date-time
@z

@x
        - name: to
          description: End of the time window you wish to query audit events for.
          in: query
          required: false
          type: string
          format: date-time
@y
        - name: to
          description: End of the time window you wish to query audit events for.
          in: query
          required: false
          type: string
          format: date-time
@z

@x
        - name: page
          description: page - specify page number. Page number to get.
          in: query
          required: false
          type: integer
          format: int32
          default: 1
@y
        - name: page
          description: page - specify page number. Page number to get.
          in: query
          required: false
          type: integer
          format: int32
          default: 1
@z

@x
        - name: page_size
          description: page_size - specify page size. Number of events to return per page.
          in: query
          required: false
          type: integer
          format: int32
          default: 25
@y
        - name: page_size
          description: page_size - specify page size. Number of events to return per page.
          in: query
          required: false
          type: integer
          format: int32
          default: 25
@z

@x
      tags:
        - "Audit Logs"
@y
      tags:
        - "Audit Logs"
@z

@x
  /v2/auditlogs/{account}/actions:
    get:
      summary: Returns list of audit log actions.
      description: Get audit log actions for a namespace to be used as a filter for querying audit events.
      operationId: AuditLogs_GetAuditActions
@y
  /v2/auditlogs/{account}/actions:
    get:
      summary: Returns list of audit log actions.
      description: Get audit log actions for a namespace to be used as a filter for querying audit events.
      operationId: AuditLogs_GetAuditActions
@z

@x
      responses:
        200:
          description: A successful response.
          schema:
            $ref: '#/definitions/GetAuditActionsResponse'
          examples:
            application/json:
              actions:
                org:
                  actions:
                    - name: team.create
                      description: contains team create events
                      label: Team Created
                    - name: team.delete
                      description: contains team delete events
                      label: Team Deleted
                    - name: team.member.add
                      description: contains team member add events
                      label: Team Member Added
                    - name: team.member.remove
                      description: contains team member remove events
                      label: Team Member Removed
                    - name: team.member.invite
                      description: contains team member invite events
                      label: Team Member Invited
                    - name: member.removed
                      description: contains org member remove events
                      label: Organization Member Removed
                    - name: create
                      description: contains organization create events
                      label: Organization Created
                  label: Organization
@y
      responses:
        200:
          description: A successful response.
          schema:
            $ref: '#/definitions/GetAuditActionsResponse'
          examples:
            application/json:
              actions:
                org:
                  actions:
                    - name: team.create
                      description: contains team create events
                      label: Team Created
                    - name: team.delete
                      description: contains team delete events
                      label: Team Deleted
                    - name: team.member.add
                      description: contains team member add events
                      label: Team Member Added
                    - name: team.member.remove
                      description: contains team member remove events
                      label: Team Member Removed
                    - name: team.member.invite
                      description: contains team member invite events
                      label: Team Member Invited
                    - name: member.removed
                      description: contains org member remove events
                      label: Organization Member Removed
                    - name: create
                      description: contains organization create events
                      label: Organization Created
                  label: Organization
@z

@x
                repo:
                  actions:
                    - name: create
                      description: contains repository create events
                      label: Repository Created
                    - name: delete
                      description: contains repository delete events
                      label: Repository Deleted
                    - name: change_privacy
                      description: contains repository privacy change events
                      label: Privacy Changed
                    - name: tag.push
                      description: contains image tag push events
                      label: Tag Pushed
                    - name: tag.delete
                      description: contains image tag delete events
                      label: Tag Deleted
                  label: Repository
@y
                repo:
                  actions:
                    - name: create
                      description: contains repository create events
                      label: Repository Created
                    - name: delete
                      description: contains repository delete events
                      label: Repository Deleted
                    - name: change_privacy
                      description: contains repository privacy change events
                      label: Privacy Changed
                    - name: tag.push
                      description: contains image tag push events
                      label: Tag Pushed
                    - name: tag.delete
                      description: contains image tag delete events
                      label: Tag Deleted
                  label: Repository
@z

@x
        429:
          description: ''
          schema: {}
          examples:
            application/json:
              detail: Rate limit exceeded
              error: false
@y
        429:
          description: ''
          schema: {}
          examples:
            application/json:
              detail: Rate limit exceeded
              error: false
@z

@x
        500:
          description: ''
          schema: {}
@y
        500:
          description: ''
          schema: {}
@z

@x
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
@y
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
@z

@x
      parameters:
        - name: account
          description: Namespace to query audit log actions for.
          in: path
          required: true
          type: string
      tags:
        - "Audit Logs"
@y
      parameters:
        - name: account
          description: Namespace to query audit log actions for.
          in: path
          required: true
          type: string
      tags:
        - "Audit Logs"
@z
