%This is the change file for the original Docker's Documentation file.
%This is part of Japanese translation version for Docker's Documantation.

@x
command: docker plugin ls
aliases: list
short: List plugins
@y
command: docker plugin ls
aliases: list
short: List plugins
@z

@x
long: |-
  Lists all the plugins that are currently installed. You can install plugins
  using the [`docker plugin install`](plugin_install.md) command.
@y
long: |-
  Lists all the plugins that are currently installed. You can install plugins
  using the [`docker plugin install`](plugin_install.md) command.
@z

@x
  You can also filter using the `-f` or `--filter` flag.
  Refer to the [filtering](#filtering) section for more information about available filter options.
@y
  You can also filter using the `-f` or `--filter` flag.
  Refer to the [filtering](#filtering) section for more information about available filter options.
@z

@x
usage: docker plugin ls [OPTIONS]
pname: docker plugin
plink: docker_plugin.yaml
options:
@y
usage: docker plugin ls [OPTIONS]
pname: docker plugin
plink: docker_plugin.yaml
options:
@z

@x
- option: filter
  shorthand: f
  value_type: filter
  description: Provide filter values (e.g. 'enabled=true')
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@y
- option: filter
  shorthand: f
  value_type: filter
  description: Provide filter values (e.g. 'enabled=true')
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@z

@x
- option: format
  value_type: string
  description: Pretty-print plugins using a Go template
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@y
- option: format
  value_type: string
  description: Pretty-print plugins using a Go template
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@z

@x
- option: no-trunc
  value_type: bool
  default_value: "false"
  description: Don't truncate output
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@y
- option: no-trunc
  value_type: bool
  default_value: "false"
  description: 詳細出力を行います。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@z

@x
- option: quiet
  shorthand: q
  value_type: bool
  default_value: "false"
  description: Only display plugin IDs
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@y
- option: quiet
  shorthand: q
  value_type: bool
  default_value: "false"
  description: プラグイン ID のみを表示します。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@z

@x
examples: |-
  ```bash
  $ docker plugin ls

  ID            NAME                                    DESCRIPTION                ENABLED
  69553ca1d123  tiborvass/sample-volume-plugin:latest   A test plugin for Docker   true
  ```
@y
examples: |-
  ```bash
  $ docker plugin ls

  ID            NAME                                    DESCRIPTION                ENABLED
  69553ca1d123  tiborvass/sample-volume-plugin:latest   A test plugin for Docker   true
  ```
@z

@x
  ### Filtering
@y
  {: #filtering }
  ### フィルター検索
@z

@x
  The filtering flag (`-f` or `--filter`) format is of "key=value". If there is more
  than one filter, then pass multiple flags (e.g., `--filter "foo=bar" --filter "bif=baz"`)
@y
  フィルターフラグ（`-f` または `--filter`）の指定書式は「キー=値」というものです。
  複数のフィルターが必要な場合は、フラグを複数指定します。
  （たとえば `--filter "foo=bar" --filter "bif=baz"` など。）
@z

@x
  The currently supported filters are:
@y
  現在サポートされているフィルターは以下のとおりです。
@z

@x
  * enabled (boolean - true or false, 0 or 1)
@y
  * enabled (boolean - true or false, 0 or 1)
@z

@x
  * capability (string - currently `volumedriver`, `networkdriver`, `ipamdriver`, `logdriver`, `metricscollector`, or `authz`)
@y
  * capability (string - currently `volumedriver`, `networkdriver`, `ipamdriver`, `logdriver`, `metricscollector`, or `authz`)
@z

@x
  #### enabled
@y
  #### enabled
@z

@x
  The `enabled` filter matches on plugins enabled or disabled.
@y
  The `enabled` filter matches on plugins enabled or disabled.
@z

@x
  #### capability
@y
  #### capability
@z

@x
  The `capability` filter matches on plugin capabilities. One plugin
  might have multiple capabilities. Currently `volumedriver`, `networkdriver`,
  `ipamdriver`, `logdriver`, `metricscollector`, and `authz` are supported capabilities.
@y
  The `capability` filter matches on plugin capabilities. One plugin
  might have multiple capabilities. Currently `volumedriver`, `networkdriver`,
  `ipamdriver`, `logdriver`, `metricscollector`, and `authz` are supported capabilities.
@z

@x
  ```bash
  $ docker plugin install --disable vieux/sshfs
@y
  ```bash
  $ docker plugin install --disable vieux/sshfs
@z

@x
  Installed plugin vieux/sshfs
@y
  Installed plugin vieux/sshfs
@z

@x
  $ docker plugin ls --filter enabled=true

  ID                  NAME                DESCRIPTION         ENABLED
  ```
@y
  $ docker plugin ls --filter enabled=true

  ID                  NAME                DESCRIPTION         ENABLED
  ```
@z

@x
  ### Formatting
@y
  {: #formatting }
  ### フォーマット設定
@z

@x
  The formatting options (`--format`) pretty-prints plugins output
  using a Go template.
@y
  フォーマット設定オプション（`--format`）により Go 言語のテンプレートを利用して、プラグインをわかりやすく出力することができます。
@z

@x
  Valid placeholders for the Go template are listed below:
@y
  Go 言語テンプレートによるプレースホルダー（placeholder）は以下のとおりです。
@z

@x
  Placeholder        | Description
  -------------------|------------------------------------------------------------
  `.ID`              | Plugin ID
  `.Name`            | Plugin name and tag
  `.Description`     | Plugin description
  `.Enabled`         | Whether plugin is enabled or not
  `.PluginReference` | The reference used to push/pull from a registry
@y
  プレースホルダー   | 内容説明
  -------------------|------------------------------------------------------------
  `.ID`              | Plugin ID
  `.Name`            | Plugin name and tag
  `.Description`     | Plugin description
  `.Enabled`         | Whether plugin is enabled or not
  `.PluginReference` | The reference used to push/pull from a registry
@z

@x
  When using the `--format` option, the `plugin ls` command will either
  output the data exactly as the template declares or, when using the
  `table` directive, includes column headers as well.
@y
  `--format` オプションを利用すると `plugin ls` コマンドは、テンプレートが定めるデータを直接出力します。
  また `table` ディレクティブを利用すると、カラムヘッダーも同時に出力されます。
@z

@x
  The following example uses a template without headers and outputs the
  `ID` and `Name` entries separated by a colon (`:`) for all plugins:
@y
  以下は、ヘッダーを含めずにテンプレートを利用する例であり、すべてのプラグインにおける `ID`、`Name` の各項目がコロン（`:`）で区切って表示されます。
@z

@x
  ```bash
  $ docker plugin ls --format "{{.ID}}: {{.Name}}"

  4be01827a72e: vieux/sshfs:latest
  ```
@y
  ```bash
  $ docker plugin ls --format "{{.ID}}: {{.Name}}"

  4be01827a72e: vieux/sshfs:latest
  ```
@z

@x
deprecated: false
min_api_version: "1.25"
experimental: false
experimentalcli: false
kubernetes: false
swarm: false
@y
deprecated: false
min_api_version: "1.25"
experimental: false
experimentalcli: false
kubernetes: false
swarm: false
@z
