%This is the change file for the original Docker's Documentation file.
%This is part of Japanese translation version for Docker's Documantation.

@x
command: docker volume inspect
short: Display detailed information on one or more volumes
@y
command: docker volume inspect
short: 1 つのボリュームまたは複数のボリュームについての詳細情報を表示します。
@z

@x
long: |-
  Returns information about a volume. By default, this command renders all results
  in a JSON array. You can specify an alternate format to execute a
  given template for each result. Go's
  [text/template](http://golang.org/pkg/text/template/) package describes all the
  details of the format.
@y
long: |-
  ボリュームに関する情報を返します。
  このコマンドが返す結果は、デフォルトでは JSON 配列です。
  指定されたテンプレートを用いて、返される結果の出力書式を変更することができます。
  Go 言語の [text/template](http://golang.org/pkg/text/template/) パッケージに、フォーマットに関する詳細が説明されています。
@z

@x
usage: docker volume inspect [OPTIONS] VOLUME [VOLUME...]
pname: docker volume
plink: docker_volume.yaml
options:
@y
usage: docker volume inspect [オプション] VOLUME [VOLUME...]
pname: docker volume
plink: docker_volume.yaml
options:
@z

@x
- option: format
  shorthand: f
  value_type: string
  description: Format the output using the given Go template
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@y
- option: format
  shorthand: f
  value_type: string
  description: Go 言語テンプレートを使って出力をフォーマットします。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
@z

@x
examples: |-
  ```console
  $ docker volume create myvolume

  myvolume
  ```
@y
examples: |-
  ```console
  $ docker volume create myvolume

  myvolume
  ```
@z

@x
  Use the `docker volume inspect` comment to inspect the configuration of the volume:
@y
  `docker volume inspect`コマンドを使って、ボリューム設定の内容を確認します。
@z

@x
  ```console
  $ docker volume inspect myvolume
  ```
@y
  ```console
  $ docker volume inspect myvolume
  ```
@z

@x
  The output is in JSON format, for example:
@y
  出力は JSON 形式であり、たとえば以下のとおりです。
@z

@x
  ```json
  [
    {
@y
  ```json
  [
    {
@z

@x
      "CreatedAt": "2020-04-19T11:00:21Z",
      "Driver": "local",
      "Labels": {},
      "Mountpoint": "/var/lib/docker/volumes/8140a838303144125b4f54653b47ede0486282c623c3551fbc7f390cdc3e9cf5/_data",
      "Name": "myvolume",
      "Options": {},
      "Scope": "local"
    }
  ]
  ```
@y
      "CreatedAt": "2020-04-19T11:00:21Z",
      "Driver": "local",
      "Labels": {},
      "Mountpoint": "/var/lib/docker/volumes/8140a838303144125b4f54653b47ede0486282c623c3551fbc7f390cdc3e9cf5/_data",
      "Name": "myvolume",
      "Options": {},
      "Scope": "local"
    }
  ]
  ```
@z

@x
  Use the `--format` flag to format the output using a Go template, for example,
  to print the `Mountpoint` property:
@y
  `--format`フラグの指定により、Go 言語のテンプレートを使ったフォーマット出力を行います。
  たとえば以下では`Mountpoint`プロパティを出力します。
@z

@x
  ```console
  $ docker volume inspect --format '{{ .Mountpoint }}' myvolume

  /var/lib/docker/volumes/myvolume/_data
  ```
@y
  ```console
  $ docker volume inspect --format '{{ .Mountpoint }}' myvolume

  /var/lib/docker/volumes/myvolume/_data
  ```
@z

@x
deprecated: false
min_api_version: "1.21"
experimental: false
experimentalcli: false
kubernetes: false
swarm: false
@y
deprecated: false
min_api_version: "1.21"
experimental: false
experimentalcli: false
kubernetes: false
swarm: false
@z
